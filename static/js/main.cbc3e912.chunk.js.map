{"version":3,"sources":["components/TodoForm/TodoForm.jsx","components/Todo/Todo.jsx","components/TodoList/TodoList.jsx","App.js","index.js"],"names":["TodoForm","state","task","handlechange","e","setState","target","value","handleSubmit","preventDefault","props","createtodo","uuid","this","onSubmit","className","type","onChange","placeholder","Component","Todo","isEditing","todo","handleremove","removetodo","id","handleChange","handleUpdate","updatedtodo","toggleform","onClick","TodoList","todos","map","App","filter","ReactDOM","render","document","getElementById"],"mappings":"sTAmCeA,E,4MA9BXC,MAAQ,CACJC,KAAK,I,EAERC,aAAa,SAACC,GACX,EAAKC,SAAS,CACVH,KAAKE,EAAEE,OAAOC,S,EAIrBC,aAAa,SAACJ,GACVA,EAAEK,iBACF,EAAKC,MAAMC,WAAW,EAAKV,MAAMC,KAAKU,eACtC,EAAKP,SAAS,CACVH,KAAK,M,4CAId,WACI,IAAMC,EAAaU,KAAKV,aAClBK,EAAaK,KAAKL,aAExB,OACI,uBAAMM,SAAUN,EAAcO,UAAU,WAAxC,UACC,uBAAOC,KAAK,OAAQT,MAAOM,KAAKZ,MAAMC,KAAMe,SAAUd,EAAce,YAAY,qBAChF,qD,GAzBUC,aCqDRC,G,kNAtDXnB,MAAQ,CACJoB,WAAU,EACVnB,KAAK,EAAKQ,MAAMY,M,EAEpBC,aAAa,WACZ,EAAKb,MAAMc,WAAW,EAAKd,MAAMe,K,EAElCC,aAAa,SAACtB,GACV,EAAKC,SAAS,CACVH,KAAKE,EAAEE,OAAOC,S,EAGtBoB,aAAa,SAACvB,GACVA,EAAEK,iBACF,EAAKC,MAAMkB,YAAY,EAAK3B,MAAMC,KAAK,EAAKQ,MAAMe,IAClD,EAAKpB,SAAS,CACVgB,WAAU,K,EAGlBQ,WAAW,WACP,EAAKxB,SAAS,CACVgB,WAAW,EAAKpB,MAAMoB,a,4CAG9B,WACI,IAAMC,EAAKT,KAAKH,MAAMY,KAChBC,EAAaV,KAAKU,aAClBI,EAAad,KAAKc,aAClBE,EAAWhB,KAAKgB,WAsBtB,OApBGhB,KAAKZ,MAAMoB,UAER,8BACI,uBAAMP,SAAUa,EAAhB,UACI,uBAAOX,KAAK,OAAOT,MAAOM,KAAKZ,MAAMC,KAAMe,SAAUJ,KAAKa,eAC1D,wBAAQZ,SAAUa,EAAlB,uBAON,sBAAKZ,UAAU,QAAf,UACA,6BAAKO,IACL,wBAAQQ,QAASD,EAAjB,kBACA,wBAAQC,QAASP,EAAjB,2B,GA9CGJ,cCmBJY,G,kKAhBb,WACE,IAAMC,EAAMnB,KAAKH,MAAMsB,MACjBR,EAAWX,KAAKH,MAAMc,WACtBI,EAAYf,KAAKH,MAAMkB,YAC7B,OACE,qBAAKb,UAAU,aAAf,SAEMiB,EAAMC,KAAI,SAASX,GACjB,OAAO,cAAC,EAAD,CAAoBG,GAAIH,EAAKG,GAAIH,KAAMA,EAAKpB,KAAMsB,WAAYA,EAAYI,YAAaA,GAA5EN,EAAKG,a,GAVdN,cC0CRe,G,kNAvCbjC,MAAQ,CACN+B,MAAM,I,EAEPR,WAAa,SAAAC,GACX,EAAKpB,SAAS,CACZ2B,MAAM,EAAK/B,MAAM+B,MAAMG,QAAO,SAAAb,GAAI,OAAIA,EAAKG,KAAOA,Q,EAGtDd,WAAW,SAACT,EAAKuB,GACf,EAAKpB,SAAS,CACZ2B,MAAM,GAAD,mBAAK,EAAK/B,MAAM+B,OAAhB,CAAsB,CAAC9B,KAAKA,EAAKuB,GAAGA,Q,EAG7CG,YAAY,SAAC1B,EAAKuB,GAChB,IAAMG,EAAY,EAAK3B,MAAM+B,MAAMC,KAAI,SAASX,GAC3C,OAAGA,EAAKG,KAAOA,EACN,2BAAIH,GAAX,IAAgBpB,KAAKA,IAEhBoB,KAEZ,EAAKjB,SAAS,CACZ2B,MAAMJ,K,4CAGX,WACE,IAAMI,EAAMnB,KAAKZ,MAAM+B,MACjBR,EAAWX,KAAKW,WAChBb,EAAWE,KAAKF,WAChBiB,EAAYf,KAAKe,YACvB,OACI,sBAAKb,UAAU,UAAf,UACE,4CAAc,kEACd,cAAC,EAAD,CAAUiB,MAAOA,EAAOR,WAAYA,EAAYI,YAAaA,IAC7D,cAAC,EAAD,CAAUjB,WAAYA,W,GAlCdQ,cCAlBiB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.cbc3e912.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {v4 as uuid} from 'uuid';\r\nimport './TodoForm.css'\r\n\r\nclass TodoForm extends Component {\r\n    state = { \r\n        task:\"\"\r\n     }\r\n     handlechange=(e) =>{\r\n        this.setState({\r\n            task:e.target.value\r\n        })\r\n        \r\n     }\r\n     handleSubmit=(e) =>{\r\n         e.preventDefault();\r\n         this.props.createtodo(this.state.task,uuid())\r\n         this.setState({\r\n             task:\"\"\r\n         })\r\n     }\r\n\r\n    render() { \r\n        const handlechange=this.handlechange;\r\n        const handleSubmit=this.handleSubmit;\r\n        \r\n        return ( \r\n            <form onSubmit={handleSubmit} className=\"TodoForm\">\r\n             <input type=\"text\"  value={this.state.task} onChange={handlechange} placeholder=\"Enter a new Todo\"></input>\r\n             <button>Add Todo</button>\r\n            </form>\r\n         );\r\n    }\r\n}\r\n \r\nexport default TodoForm;","import React, { Component } from 'react';\r\nimport './Todo.css'\r\nclass Todo extends Component {\r\n    state = { \r\n        isEditing:false,\r\n        task:this.props.todo\r\n     }\r\n    handleremove=() =>{\r\n     this.props.removetodo(this.props.id);\r\n    }\r\n    handleChange=(e) =>{\r\n        this.setState({\r\n            task:e.target.value\r\n        })\r\n    } \r\n    handleUpdate=(e) =>{\r\n        e.preventDefault()\r\n        this.props.updatedtodo(this.state.task,this.props.id)\r\n        this.setState({\r\n            isEditing:false\r\n        })\r\n    }\r\n    toggleform=()=>{\r\n        this.setState({\r\n            isEditing:!this.state.isEditing\r\n        })\r\n    }\r\n    render() { \r\n        const todo=this.props.todo;\r\n        const handleremove=this.handleremove;\r\n        const handleUpdate=this.handleUpdate;\r\n        const toggleform=this.toggleform;\r\n        let result;\r\n        if(this.state.isEditing){\r\n          result=(\r\n              <div>\r\n                  <form onSubmit={handleUpdate}>\r\n                      <input type=\"text\" value={this.state.task} onChange={this.handleChange}/>\r\n                      <button onSubmit={handleUpdate}>Save</button>\r\n                  </form>\r\n              </div>\r\n          )\r\n        }\r\n          else{\r\n              result=(\r\n                <div className=\"todos\">\r\n                <li>{todo}</li>\r\n                <button onClick={toggleform}>Edit</button>\r\n                <button onClick={handleremove}>Delete</button>\r\n            </div>\r\n              )\r\n          }\r\n        \r\n        return result\r\n    }\r\n}\r\n \r\nexport default Todo;","import React, { Component } from 'react';\r\nimport Todo from '../Todo/Todo';\r\nimport './TodoList.css'\r\nclass TodoList extends Component {\r\n  \r\n  render() { \r\n    const todos=this.props.todos;\r\n    const removetodo=this.props.removetodo;\r\n    const updatedtodo=this.props.updatedtodo;\r\n    return (  \r\n      <div className=\"show-todos\">\r\n          {\r\n            todos.map(function(todo){\r\n              return <Todo key={todo.id} id={todo.id} todo={todo.task} removetodo={removetodo} updatedtodo={updatedtodo}/>\r\n            })\r\n          }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default TodoList;","import React, { Component } from 'react';\nimport TodoForm from './components/TodoForm/TodoForm.jsx';\nimport TodoList from './components/TodoList/TodoList.jsx';\nimport './App.css'\n\nclass App extends Component {\n  state = { \n    todos:[]\n   }\n   removetodo = id =>{\n     this.setState({\n       todos:this.state.todos.filter(todo => todo.id !== id)\n     })\n   }\n   createtodo=(task,id) =>{\n     this.setState({\n       todos:[...this.state.todos,{task:task,id:id}]\n     })\n   }\n   updatedtodo=(task,id) =>{\n     const updatedtodo=this.state.todos.map(function(todo){\n          if(todo.id === id){\n            return {...todo,task:task}\n          }\n          return todo;\n     })\n     this.setState({\n       todos:updatedtodo\n     })\n   }\n  render() { \n    const todos=this.state.todos;\n    const removetodo=this.removetodo;\n    const createtodo=this.createtodo;\n    const updatedtodo=this.updatedtodo;\n    return ( \n        <div className=\"TodoApp\">\n          <h1>Todo List!<span>A Simple React TodoList app</span></h1>\n          <TodoList todos={todos} removetodo={removetodo} updatedtodo={updatedtodo} ></TodoList>\n          <TodoForm createtodo={createtodo}></TodoForm>\n         </div>\n     );\n  }\n}\n \nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}